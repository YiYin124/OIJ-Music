@using System.Text.RegularExpressions;
@using System.Security.Cryptography;
@using System.Text;
@using MD5Helper;

@{
    if (Page.IsLogin)
    {
        Response.Redirect("~");
        return;
    }
    
    // 设置客户端缓存策略
    Response.Cache.SetExpires(DateTime.Now.AddSeconds(10));
    Response.Cache.SetCacheability(HttpCacheability.Public);
    Response.Cache.SetValidUntilExpires(true);

    if (IsPost)
    {
        var name = Request.Form["name"];
        var mail = Request.Form["mail"];
        var password = Request.Form["password"];
        if (Regex.IsMatch(name, @"^[\w\u3100-\u312F\u4E00-\u9FCC\uF900-\uFAFF\u2F00-\u2FDF\u1100-\u11FF\uAC00-\uD7AF\u3040-\u309F\u30A0-\u30FF\u3190-\u319F\uA4D0-\uA4FF\u16F00-\u16F9F]+$") &
            Regex.IsMatch(mail, @"^(\w+\-|\w+\.)*\w+@(\w+\-|\w+\.)*\w+\.\w+$") & 
            Regex.IsMatch(password, @"^\w{6,}$"))
        {
            using (var db = Database.Open("OIJ-Music"))
            {
                if (db.QuerySingle("SELECT Name FROM Account WHERE Name = @0", name) == null &
                    db.QuerySingle("SELECT Email FROM Account WHERE Email = @0", mail) == null)
                {
                    string guid = Guid.NewGuid().ToString();
                    // 对密码进行一次摘要
                    using (MD5 md5Hash = MD5.Create())
                    {
                        password = MD5Helper.GetMd5Hash(md5Hash, password);
                    }
                    App.MailValidationData[guid] = new Dictionary<string, object>();
                    App.MailValidationData[guid]["name"] = name;
                    App.MailValidationData[guid]["mail"] = mail;
                    App.MailValidationData[guid]["password"] = password;
                    App.MailValidationData[guid]["validdate"] = DateTime.Now.AddMinutes(10);
                    try
                    {
                        WebMail.Send(mail, "OIJ-Music 注册验证", Request.Url + "?key=" + guid);
                        Response.Write("{ \"IsOk\": true }");
                    }
                    catch (Exception)
                    {
                        Response.Write("{ \"IsOk\": false, \"reason\": \"邮件发送失败\" }");
                    }
                }
                else
                {
                    Response.Write("{ \"IsOk\": false, \"reason\": \"这可能是一个 Hacker 行为!\" }");
                }
            }
        }
        else
        {
            Response.Write("{ \"IsOk\": false, \"reason\": \"这可能是一个 Hacker 行为!\" }");
        }
    }
    else if (!Request.QueryString["key"].IsEmpty())
    {
        var guid = Request.QueryString["key"];
        if (App.MailValidationData[guid] != null)
        {
            string name = App.MailValidationData[guid]["name"];
            string mail = App.MailValidationData[guid]["mail"];
            string password = App.MailValidationData[guid]["password"];
            DateTime validDate = App.MailValidationData[guid]["validdate"];

            // 检测验证是否过期
            if (validDate > DateTime.Now)
            {
                using (var db = Database.Open("OIJ-Music"))
                {
                    if (db.QuerySingle("SELECT Name FROM Account WHERE Name = @0", name) == null &
                        db.QuerySingle("SELECT Email FROM Account WHERE Email = @0", mail) == null)
                    {
                        db.Execute("INSERT INTO Account (Name, Email, Password) VALUES(@0, @1, @2)", name, mail, password);
                        // 注册成功
                        App.MailValidationData[guid] = null; // 坐等自动回收
                        Response.Write("<p>注册成功!</p>");

                        var row = db.QuerySingle("SELECT Id,Password FROM Account WHERE Email = @0", mail);
                        
                        // 注册成功后自动登录
                        if (row != null)
                        {
                            string loginId = row.Id + "&" + row.Password;

                            // 会话登录状态
                            HttpCookie loginCookie = new HttpCookie("1", loginId);
                            loginCookie.HttpOnly = true;
                            Response.Cookies.Add(loginCookie);
                        
                            Response.Redirect("~");
                        }
                    }
                    else
                    {
                        // 无效的验证请求
                        App.MailValidationData[guid] = null; // 坐等自动回收
                        Response.Write("<p>无效的验证请求</p>");
                    }
                }
            }
            else
            {
                // 无效的验证请求
                App.MailValidationData[guid] = null; // 坐等自动回收
                Response.Write("<p>验证请求已过期</p>");
            }
        }
        else
        {
            // 无效的验证请求
            Response.Write("<p>无效的验证请求</p>");
        }
    }
    else if (!Request.QueryString["name"].IsEmpty())
    {
        using (var db = Database.Open("OIJ-Music"))
        {
            if (db.QuerySingle("SELECT Name FROM Account WHERE Name = @0", Request.QueryString["name"]) == null)
            {
                Response.Write("{ \"IsOk\": true }");
            }
            else
            {
                Response.Write("{ \"IsOk\": false }");
            }
        }
    }
    else if (!Request.QueryString["mail"].IsEmpty())
    {
        using (var db = Database.Open("OIJ-Music"))
        {
            if (db.QuerySingle("SELECT Email FROM Account WHERE Email = @0", Request.QueryString["mail"]) == null)
            {
                Response.Write("{ \"IsOk\": true }");
            }
            else
            {
                Response.Write("{ \"IsOk\": false }");
            }
        }
    }
}